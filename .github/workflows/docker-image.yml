name: docker_build_push_acr
 
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
 
jobs:
  docker_build_push_acr:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4   

      # Run unit tests
      - name: Unit Tests
        run: dotnet test WeatherForecast.Test/WeatherForecast.Test.csproj --logger "console;verbosity=detailed"

      # Compose Docker file
      - name: Compose Docker file
        id: run-test-cases
        run: |         
         docker-compose -f "docker-compose.yml" up -d  
         netstat -tulpn 
         docker ps
         sleep 10s       
         curl -v http://0.0.0.0:8080/weather-forecast/5-day 
 
      # Make directory to upload the test results
      - name: Make Directory for results
        run: mkdir -p testResults

      # Install the newman command line utility and also install the html extra reporter
      - name: Install newman
        run: |
         npm install -g newman
         npm install -g newman-reporter-htmlextra

      # Run newman postman collection tests
      - name: run newman
        run: |            
         #newman run ./PostmanCollections/weather-forecast-api.json -e ./PostmanCollections/weather-forecast-api-env.json -r htmlextra --reporter-htmlextra-export testResults/htmlreport.html --reporter-htmlextra-darkTheme  > testResults/runreport1.html
         newman run ./PostmanCollections/weather-forecast-api.json -e ./PostmanCollections/weather-forecast-api-env.json

      # Azure Registary Docker login
      - name: 'Azure Docker Login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Push Docker container to Azure Container Registary
      - name: Build the frontend image and push it to ACR
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/weatherforecastapi66:${{ github.sha }}
          context: ./WeatherForecast.Api
          file: WeatherForecast.Api/Dockerfile
    
      # Stop Docker containers
      - name: Stop containers
        if: always()
        run: docker-compose -f "docker-compose.yml" down
