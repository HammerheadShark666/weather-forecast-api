{
  "info": {
    "_postman_id": "be798ba4-0299-4358-89bb-5990d1a40253",
    "name": "CI/CD Demo",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "4654363"
  },
  "item": [
    {
      "name": "/weather-forecast/5-day",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "pm.test(\"weather forecast has 5 forecasts\", () => {\r",
              "    let forcasts = pm.response.json();\r",
              "    pm.expect(forcasts).to.have.length(5)\r",
              "});\r",
              "\r",
              "pm.test(\"weather forecast has properties\", () => {\r",
              "    let forcasts = pm.response.json();\r",
              "    let forcast = forcasts[0];\r",
              "    pm.expect(forcast).to.have.property('date');\r",
              "    pm.expect(forcast).to.have.property('temperatureC');\r",
              "    pm.expect(forcast).to.have.property('temperatureF');\r",
              "    pm.expect(forcast).to.have.property('summary');\r",
              "});\r",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://localhost:7072/weather-forecast/5-day",
          "protocol": "https",
          "host": [
            "localhost"
          ],
          "port": "7072",
          "path": [
            "weather-forecast",
            "5-day"
          ]
        }
      },
      "response": []
    },
    {
      "name": "/weather-forecast/2024-01-16",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              " \r",
              "pm.test(\"weather forecast has properties\", () => {\r",
              "    let forcast = pm.response.json();\r",
              "    pm.expect(forcast).to.have.property('date');\r",
              "    pm.expect(forcast).to.have.property('temperatureC');\r",
              "    pm.expect(forcast).to.have.property('temperatureF');\r",
              "    pm.expect(forcast).to.have.property('summary');\r",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "https://localhost:7072/weather-forecast?date=2020-07-25",
          "protocol": "https",
          "host": [
            "localhost"
          ],
          "port": "7072",
          "path": [
            "weather-forecast"
          ],
          "query": [
            {
              "key": "date",
              "value": "2020-07-25"
            }
          ]
        }
      },
      "response": []
    }
  ]
}
